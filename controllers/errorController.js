const sendErrorDev = (err, res) => {
  res.status(err.statusCode).json({
    status: err.status,
    error: err,
    message: err.message,
    stack: err.stack,
  });
};

const sendErrorProd = (err, res) => {
  // added the below condition to make sure that we are sending the error response only when we know that the error is generated by us using the AppError class.
  if (err.isOperational) {
    res.status(err.statusCode).json({
      status: err.status,
      message: err.message,
    });
  } else {
    // else we are returning a very generic message
    // this could come from programming or unexpected errors or any third party packages errors such as mongoose validation errors
    // 1) log the error
    console.error('Error ❌', err);
    // 2) Send generic error message
    res.status(500).json({ status: 'error', message: 'Something went wrong!' });
  }
};

module.exports = (err, req, res, next) => {
  // 500 Internal Server Error
  err.statusCode = err.statusCode || 500;
  err.status = err.status || 'error';
  if (process.env.NODE_ENV === 'development') {
    sendErrorDev(err, res);
  } else if (process.env.NODE_ENV === 'production') {
    sendErrorProd(err, res);
  }
};
